plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.isenzo'
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "mojang"
        url = "https://libraries.minecraft.net/"
    }
    maven { url "https://jitpack.io" }
}

dependencies {
//    compileOnly 'org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT'
//    implementation 'org.spigotmc:spigot:1.21.4'
    compileOnly 'org.spigotmc:spigot:1.21.4-R0.1-SNAPSHOT'

    compileOnly "org.projectlombok:lombok:1.18.36"
    annotationProcessor "org.projectlombok:lombok:1.18.36"

    compileOnly 'com.mojang:authlib:3.13.56'

    implementation 'org.mongodb:mongodb-driver-sync:4.9.1'

}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set("PetPlugin")
    archiveClassifier.set("")
    archiveVersion.set("")
}

tasks.build.dependsOn shadowJar